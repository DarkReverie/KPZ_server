// <auto-generated />
using System;
using DS_Lab_3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DS_Lab_3.Migrations
{
    [DbContext(typeof(GymDsCopyContext))]
    [Migration("20231103140211_DS_DB2")]
    partial class DS_DB2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("DS_Lab_3.Models.Bathhousereservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reservation_id");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<TimeOnly?>("ReservationTime")
                        .HasColumnType("time")
                        .HasColumnName("reservation_time");

                    b.Property<int?>("ReservedHours")
                        .HasColumnType("int")
                        .HasColumnName("reserved_hours");

                    b.HasKey("ReservationId")
                        .HasName("PRIMARY");

                    b.ToTable("bathousereservation", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Boughtshopitem", b =>
                {
                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("MembershipId")
                        .HasColumnType("int")
                        .HasColumnName("membership_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.ToTable("boughtshopitems", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("EmployeeEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_email");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("employee_roles", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<DateOnly?>("InvoiceDate")
                        .HasColumnType("date")
                        .HasColumnName("invoice_date");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("invoice", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Locker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_available");

                    b.Property<string>("LockerNumber")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("locker_number");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("locker", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Lockerassignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("AssignmentDate")
                        .HasColumnType("date")
                        .HasColumnName("assignment_date");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<int?>("LockerId")
                        .HasColumnType("int")
                        .HasColumnName("locker_id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("lockerassignment", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("membership_id");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("MemberEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("member_email");

                    b.Property<string>("MemberPhone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("member_phone");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("surname");

                    b.HasKey("MembershipId")
                        .HasName("PRIMARY");

                    b.ToTable("membership", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<decimal?>("PaymentAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("payment_amount");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.HasKey("PaymentId")
                        .HasName("PRIMARY");

                    b.ToTable("payment", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Shopitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("shopitem", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Trainersession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int")
                        .HasColumnName("trainer_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("trainersession", (string)null);
                });

            modelBuilder.Entity("DS_Lab_3.Models.Workoutclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Schedule")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("schedule");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("workoutclass", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
